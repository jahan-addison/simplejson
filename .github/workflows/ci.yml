name: CI

on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        compiler: [g++, clang++]
        exclude: # Exclude macOS + GCC as it's not the default and requires extra setup
          - os: macos-latest
            compiler: g++

    steps:

    - name: cmake
      uses: jwlawson/actions-setup-cmake@v2
      with:
        cmake-version: '3.16.x'

    - name: install dependencies (Ubuntu)
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-10 llvm-20 valgrind clang-20 iwyu python3-dev cppcheck clang-tidy
        sudo update-alternatives \
          --install /usr/bin/gcc gcc /usr/bin/gcc-10 100 \
          --slave /usr/bin/gcc-ar gcc-ar /usr/bin/gcc-ar-10 \
          --slave /usr/bin/gcc-ranlib gcc-ranlib /usr/bin/gcc-ranlib-10 \
          --slave /usr/bin/gcov gcov /usr/bin/gcov-10
        sudo update-alternatives \
          --install /usr/bin/llvm-ar llvm-ar /usr/bin/llvm-ar-20 100 \
          --slave /usr/bin/llvm-ranlib llvm-ranlib /usr/bin/llvm-ranlib-20 \
          --slave /usr/bin/llvm-cov llvm-cov /usr/bin/llvm-cov-20
        sudo update-alternatives \
          --install /usr/bin/clang clang /usr/bin/clang-20 100

    - name: install dependencies (Mac)
      if: startsWith(matrix.os, 'macos')
      run: |
        brew update
        brew install llvm@20 clang-format cppcheck coreutils

    - uses: actions/checkout@v4

    - name: build
      run: |
        # make with -fsanitize
        cmake -Bbuild -DCMAKE_CXX_COMPILER=${{ matrix.compiler }} -DCMAKE_BUILD_TYPE=Debug -DUSE_SANITIZER="Address;Undefined" -DBUILD_TESTS=ON

    - name: test
      run: |
        # make with -fsanitize
        cmake --build build
        ./build/Test_Suite
        ./build/Test_Suite_CPP20


    - name: memcheck
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        # Build for valgrind without -fsanitize
        rm -rf build
        cmake -Bbuild -DCMAKE_CXX_COMPILER=${{ matrix.compiler }} -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTS=ON -DBUILD_EXAMPLES=ON
        cmake --build build
        valgrind --leak-check=full --show-leak-kinds=all ./build/large_example
        valgrind --leak-check=full --show-leak-kinds=all ./build/readme
        valgrind --leak-check=full --show-leak-kinds=all ./build/array_example
        valgrind --leak-check=full --show-leak-kinds=all ./build/iter_example
        valgrind --leak-check=full --show-leak-kinds=all ./build/json_example
        valgrind --leak-check=full --show-leak-kinds=all ./build/load_example
        valgrind --leak-check=full --show-leak-kinds=all ./build/prim_example

        valgrind --leak-check=full --show-leak-kinds=all ./build/Test_Suite
        valgrind --leak-check=full --show-leak-kinds=all ./build/Test_Suite_CPP20
