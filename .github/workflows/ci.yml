name: CI

on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main

env:
  CPM_SOURCE_CACHE: ${{ github.workspace }}/cpm_modules

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Installation
      run: |
        sudo apt-get update
        sudo apt-get install -y llvm-20 clang-20 cppcheck clang-tidy valgrind
        sudo update-alternatives \
          --install /usr/bin/llvm-ar llvm-ar /usr/bin/llvm-ar-20 100 \
          --slave /usr/bin/llvm-ranlib llvm-ranlib /usr/bin/llvm-ranlib-20 \
          --slave /usr/bin/llvm-cov llvm-cov /usr/bin/llvm-cov-20
        sudo update-alternatives \
          --install /usr/bin/clang clang /usr/bin/clang-20 100

    - name: configure
      run:

    - name: build and test
      run: |
        # Make with -fsanitize
        cmake -Bbuild -DCMAKE_C_COMPILER=$(which clang) -DCMAKE_CXX_COMPILER=$(which clang++) -DCMAKE_BUILD_TYPE=Debug -DUSE_SANITIZER="Address;Undefined" -DBUILD_EXAMPLES=ON
        cd build/
        make
        cd ..
        rm -rf build
        # Make for valgrind
        cmake -Bbuild -DCMAKE_C_COMPILER=$(which clang) -DCMAKE_CXX_COMPILER=$(which clang++) -DCMAKE_BUILD_TYPE=Debug -DBUILD_EXAMPLES=ON
        cd build
        make
        valgrind --leak-check=full --show-leak-kinds=all ./array_example
        valgrind --leak-check=full --show-leak-kinds=all ./iter_example
        valgrind --leak-check=full --show-leak-kinds=all ./json_example
        valgrind --leak-check=full --show-leak-kinds=all ./load_example
        valgrind --leak-check=full --show-leak-kinds=all ./prim_example
